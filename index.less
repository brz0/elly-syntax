@import 'syntax-variables';

atom-text-editor, atom-text-editor {
    background-color: @syntax-background-color;
    color: @syntax-text-color;

  .invisible-character, .indent-guide {
    color: fade(@syntax-invisible-character-color, 18%);
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;

    .cursor-line {
      background-color: @syntax-gutter-background-color-selected;
    }
  }

  .line-number.cursor-line-no-selection {
    background-color: @syntax-gutter-background-color-selected;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    border-color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  // Find formatting
  .find-result .region {
    background-color: transparent;
    border: none;
    box-shadow:
      0 0 0 2px black,
      0 0 0 3px @yellow,
      0 0 5px 3px @yellow;
    border-radius: 3px;
  }
  .current-result .region {
    border: none;
    box-shadow:
      0 0 0 1px @syntax-selection-color,
      0 0 0 3px @yellow,
      0 0 5px 5px @yellow;
    border-radius: 3px;
  }

  // Fancy comments, because comments should stand out, or be deleted
  .syntax--comment {
    background-color: black;
    color: #9e9e9e;
    box-shadow: none;

    // Nested comments shouldn't double-box-shadow
    .syntax--comment {
      box-shadow: none;
      background-color: transparent;
    }
  }
  .syntax--comment.syntax--whitespace {
    background-color: transparent;
    box-shadow: none;
  }

  .syntax--string {
    color: @yellow;
  }

  .syntax--constant.syntax--numeric,
  .syntax--constant.syntax--language,
  .syntax--constant.syntax--character,
  .syntax--constant.syntax--other {
    color: @indigo;
  }

  .syntax--keyword {
    color: @red;
  }

  .syntax--storage {
    color: @red;
  }

  .syntax--storage.syntax--type {
    font-style: italic;
    color: @blue;
  }

  .syntax--entity.syntax--name.syntax--class {
    text-decoration: underline;
    color: @green;
  }

  .syntax--entity.syntax--other.syntax--inherited-class {
    font-style: italic;
    text-decoration: underline;
    color: @green;
  }

  .syntax--entity.syntax--name.syntax--function {
    color: @green;
  }

  .syntax--entity.syntax--name.syntax--instance {
    color: @blue;
  }

  .syntax--variable.syntax--parameter {
    font-style: italic;
    color: @orange;
  }

  .syntax--entity.syntax--name.syntax--tag {
    color: @red;
  }

  .syntax--entity.syntax--other.syntax--attribute-name {
    color: @green;
  }

  .syntax--support.syntax--constant, .syntax--support.syntax--function {
    color: @blue;
  }

  .syntax--support.syntax--type,
  .syntax--support.syntax--class {
    font-style: italic;
    color: @blue;
  }

  .syntax--invalid {
    color: @white;
    background-color: @red;
  }
}
